[{"/Users/jake/Desktop/gif-quick/src/components/Output.js":"1","/Users/jake/Desktop/gif-quick/src/components/Edit.js":"2","/Users/jake/Desktop/gif-quick/src/App.js":"3","/Users/jake/Desktop/gif-quick/src/components/Error.js":"4","/Users/jake/Desktop/gif-quick/src/components/Input.js":"5","/Users/jake/Desktop/gif-quick/src/reportWebVitals.js":"6","/Users/jake/Desktop/gif-quick/src/components/Shapes.js":"7","/Users/jake/Desktop/gif-quick/src/index.js":"8"},{"size":544,"mtime":1620614481114,"results":"9","hashOfConfig":"10"},{"size":1099,"mtime":1620623028038,"results":"11","hashOfConfig":"10"},{"size":4283,"mtime":1620621006265,"results":"12","hashOfConfig":"10"},{"size":467,"mtime":1620616358460,"results":"13","hashOfConfig":"10"},{"size":1885,"mtime":1620616146701,"results":"14","hashOfConfig":"10"},{"size":362,"mtime":1609816801651,"results":"15","hashOfConfig":"10"},{"size":817,"mtime":1620622550684,"results":"16","hashOfConfig":"10"},{"size":478,"mtime":1620589130509,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1g0hniz",{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"22","messages":"23","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"24"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"27","messages":"28","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/jake/Desktop/gif-quick/src/components/Output.js",[],"/Users/jake/Desktop/gif-quick/src/components/Edit.js",[],"/Users/jake/Desktop/gif-quick/src/App.js",["35"],"import React, { useState, useEffect } from 'react';\nimport { createFFmpeg, fetchFile } from '@ffmpeg/ffmpeg'\nimport Shapes from './components/Shapes'\nimport Input from './components/Input'\nimport Edit from './components/Edit'\nimport Output from './components/Output'\nimport Error from './components/Error'\nimport './styles/App.css';\n\nconst ffmpeg = createFFmpeg({ log: true })\n\nconst App = () => {\n    const [error, setError] = useState(false)\n    const [ready, setReady] = useState(false)\n    const [video, setVideo] = useState(false)\n    const [title, setTitle] = useState(false)\n    const [duration, setDuration] = useState(false)\n    const [gif, setGif] = useState(false)\n\n    const load = async () => await ffmpeg.load().then(() => setReady(true))\n    useEffect(() => {load()}, [])\n    useEffect(() => {video && setTitle(video.name)}, [video])\n    \n    const passError = () => setError(!error)\n    const passVideo = vid => setVideo(vid)\n    const passDuration = dur => setDuration(dur)\n    const removeGif = () => setGif(false)\n\n    const convertToGif = async (start, gifDur) => {\n        try {\n            // Write the file to memory (to a file name unlikely to be in memory)\n            ffmpeg.FS('writeFile', 'jakeisawesome.mp4', await fetchFile(video))\n            // Create a color pallete for each frame of the image\n            // Run the command to convert\n            await ffmpeg.run(\n                // where we want the gif to start relative to the input\n                '-ss', `${start}`, \n                // the duration to read from the input\n                '-t', `${gifDur}`, \n                // sets the input to the file created previously\n                '-i', 'jakeisawesome.mp4',\n                // '-filter_complex','[0:v] fps=12,scale=480:-1,split [a][bx;[a] palettegen [p];[b][p] paletteuse',\n                // sets the output desitantion of the previous set of commands\n                '-f', 'gif', `${title}.gif`)\n            // $ ffmpeg -ss 61.0 -t 2.5 -i StickAround.mp4 -i palette.png -filter_complex \"[0:v][1:v] paletteuse\" prettyStickAround.gif\n            // -filter_complex \"[0:v] fps=12,scale=w=480:h=-1,split [a][b];[a] palettegen=stats_mode=single [p];[b][p] paletteuse=new=1\" StickAroundPerFrame.gif\n            const data = ffmpeg.FS('readFile', `${title}.gif`);\n            const url = URL.createObjectURL(new Blob([data.buffer], { type: 'image/gif' }));\n            setGif(url)\n        } catch (e) {\n            console.log(e.code)\n            console.log(e.msg)\n        }\n    }\n\n    const getPalette = async () => {\n        // await ffmpeg.run('-i', 'test.mp4', '-ss', `${start}`, '-t', `${gifDur}`, '-f', 'gif', `${title}.gif`)\n        // $ ffmpeg -ss 61.0 -t 2.5 -i StickAround.mp4 -filter_complex \"[0:v] palettegen\" palette.png\n        // await ffmpeg.run()\n    }\n\n    return ready ? (\n        <div className=\"App\">\n            <Shapes />\n            <div className=\"container\">            \n                <h1 className=\"title\">GIF-IT!</h1>\n\n                {(!video && !error) && <Input passVideo={passVideo} />}\n                \n                {(video && !gif && !error) && \n                    <div className=\"videoContainer\">\n                        <video \n                            controls className=\"video\"\n                            src={URL.createObjectURL(video)} \n                            onLoadedMetadata={e => setDuration(e.target.duration.toFixed(2))}\n                        />\n                    </div>}\n\n\n                {(video && !gif && !error) && <Edit\n                    passVideo={passVideo}\n                    convertToGif={convertToGif} \n                    passDuration={passDuration} \n                    duration={duration} \n                    video={video}\n                />}\n\n                {(gif && !error) && <Output \n                    removeGif={removeGif}\n                    fname={video.name.slice(0, video.name.indexOf(\".\"))}\n                    gif={gif}\n                />}\n\n                {error && <Error passError={passError} />}\n            </div>\n\n            <div className=\"footer\">\n                <a className=\"jake\" href=\"http://jakerandall.me\">Made by your good friend Jake</a>\n            </div>\n\n        </div>\n    ) : ( <p>Loading...</p>)\n}\n\nexport default App;","/Users/jake/Desktop/gif-quick/src/components/Error.js",[],"/Users/jake/Desktop/gif-quick/src/components/Input.js",["36"],"/Users/jake/Desktop/gif-quick/src/reportWebVitals.js",[],"/Users/jake/Desktop/gif-quick/src/components/Shapes.js",[],"/Users/jake/Desktop/gif-quick/src/index.js",[],{"ruleId":"37","severity":1,"message":"38","line":56,"column":11,"nodeType":"39","messageId":"40","endLine":56,"endColumn":21},{"ruleId":"41","severity":1,"message":"42","line":14,"column":8,"nodeType":"43","endLine":14,"endColumn":10,"suggestions":"44"},"no-unused-vars","'getPalette' is assigned a value but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'handleDrop'. Either include it or remove the dependency array.","ArrayExpression",["45"],{"desc":"46","fix":"47"},"Update the dependencies array to be: [handleDrop]",{"range":"48","text":"49"},[535,537],"[handleDrop]"]